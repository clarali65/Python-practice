1铺瓷砖（10分）
题目内容：

给定一个长度为N的区域，及4种不同长度的瓷砖：灰瓷砖（长为1格）、红瓷砖（长为2格）、绿瓷砖（长为3格）与蓝瓷砖（长为4格），求所有不同的铺满整个区域的方法数。

例如：当N=5时，共有15种铺满区域的方法，示意图如下：


输入格式:

一个自然数N


输出格式：

一行数字，表示不同的方法总数


输入样例：

5


输出样例：

15




2分发糖果（10分）
题目内容：

老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。


你需要按照以下要求，帮助老师给这些孩子分发糖果：

每个孩子至少分配到 1 个糖果。

相邻的孩子中，评分高的孩子必须获得更多的糖果。

那么这样下来，老师至少需要准备多少颗糖果呢？


输入格式:

一个列表，以文本格式的有效Python表达式给出


输出格式：

一行数字，表示满足分配条件所需的最少糖果数


输入样例：

[1,2,2]


输出样例：

4

注：可行的分配方案为1、2、1 颗糖果；第三个孩子只得到1颗糖果也满足题目条件




3表达式按不同顺序求值（10分）
题目内容：

给定一个表达式字符串，求出按不同的求值顺序可能得到的所有结果


输入格式:

一行字符串，仅包含0-9与运算符+、-与*

注：字符串保证三种运算符左右均为数字字符


输出格式：

所有不重复的可能的结果，从小到大排序并以半角逗号","分隔


输入样例：

2*3-4*5


输出样例：

-34,-14,-10,10

注：

(2*(3-(4*5))) = -34 

((2*3)-(4*5)) = -14 

((2*(3-4))*5) = -10 

(2*((3-4)*5)) = -10 

(((2*3)-4)*5) = 10


示例代码模板：

def findWays(expr):
    # 用于将字符串转为数字与运算符，供参考
    nums, ops = [], []
    num = 0
    for c in expr:
        if '0' <= c <= '9':
            num = num * 10 + ord(c) - 48
        else:
            ops.append(c)
            nums.append(num)
            num = 0
    else:
        nums.append(num)
 
    # code here
 
expr=input()
print(findWays(expr))

